
import java.awt.event.KeyAdapter;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author RANDY
 */
public class BiblioVirtual extends javax.swing.JFrame {
        CargaIndividual Ci = new CargaIndividual();
        static DatosVirtuales[] ListaVirtual = new DatosVirtuales[100];
        
         
        
    /**
     * Creates new form BiblioVirutal
     */
    public BiblioVirtual() {
        initComponents();
        setLocationRelativeTo(null);
        String[][] matriz = new String [Ci.getListaBiblios().length][100];
        
        
       for (int i = 0; i < Ci.getListaBiblios().length; i++) {
           
         
           
         if(Ci.getListaBiblios()[i] != null){
             if(Ci.getListaBiblios()[i].getTipo() == "Libro Virtual"){
                
                matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();

       
         }      
               
       }
         } 
        
       
        String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
       // TablaBiblios.setAutoCreateRowSorter(true);
        //sorter = new TableRowSorter<>();
        //TablaBiblios.setRowSorter(sorter); 
        
    }
    
    DatosVirtuales[] redimensionarArre(DatosVirtuales[] arreglo){
        DatosVirtuales[] temporal = new DatosVirtuales[arreglo.length + 1];
        for (int i = 0; i < arreglo.length; i++) {
            temporal[i] = arreglo[i];
        }
        return temporal;
    }
    
    Boolean hayespacio1(DatosVirtuales[] arreglo){
        Boolean espacio = false;
        for (int i = 0; i < arreglo.length; i++) {
            if(arreglo[i] == null){
                espacio=true;
                break; 
            }
        }
        return espacio;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaBiblios = new javax.swing.JTable();
        Filtro = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Txt_Usuario = new javax.swing.JTextField();
        Txt_Atributo = new javax.swing.JComboBox<>();
        Txt_Filtro = new javax.swing.JTextField();
        VerBiblioVirtual = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 51, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/facultad.png"))); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/biblioteca.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 408, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Biblioteca Virtual");

        TablaBiblios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo", "Agregar"
            }
        ));
        TablaBiblios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaBibliosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaBiblios);

        Filtro.setText("Buscar");
        Filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logoUsuario.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 0, 14)); // NOI18N
        jLabel4.setText("Usuario:");

        Txt_Usuario.setEditable(false);
        Txt_Usuario.setFont(new java.awt.Font("Perpetua Titling MT", 0, 14)); // NOI18N

        Txt_Atributo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Autor", "Titulo", "A単o", "Palabras", "Descripcion", "Temas", "Edicion", "Area", "Categoria", "ISBN" }));

        Txt_Filtro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Txt_FiltroKeyReleased(evt);
            }
        });

        VerBiblioVirtual.setText("Ver Biblioteca Virtual");
        VerBiblioVirtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerBiblioVirtualActionPerformed(evt);
            }
        });

        Regresar.setText("Regresar");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo2-modified (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel5)
                        .addGap(156, 156, 156)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Txt_Atributo, 0, 110, Short.MAX_VALUE)
                            .addComponent(Txt_Filtro))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(424, 424, 424))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(179, 179, 179)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(VerBiblioVirtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Regresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Txt_Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(384, 384, 384))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Txt_Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(VerBiblioVirtual, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(Txt_Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(Txt_Atributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(29, 29, 29)))
                .addComponent(Filtro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroActionPerformed
        // TODO add your handling code here:
        
        String[][] matriz = new String[Ci.getListaBiblios().length][14];
        
        for (int i = 0; i < Ci.getListaBiblios().length; i++) {
            if("Autor".equals(Txt_Atributo.getSelectedItem().toString())){
            
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getAutor())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            
            }
            else if("Titulo".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getTitulo())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            else if("A単o".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getA単o())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            
            else if("Palabras".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getPalabrasClave())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            
            else if("Descripcion".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getDescripcion())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            
            else if("Temas".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getTemas())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            else if("Edicion".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getEdicion())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            else if("Area".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getArea())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            else if("Categoria".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getCategoria())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            
            else if("ISBN".equals(Txt_Atributo.getSelectedItem().toString())){
    
               if(Txt_Filtro.getText().equals(Ci.getListaBiblios()[i].getISBN())){
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               }
            
            
            }
            else if("Todos".equals(Txt_Atributo.getSelectedItem().toString())){
    
             
                   
               matriz[i][0]= Ci.getListaBiblios()[i].getAutor();
                matriz[i][1]= Ci.getListaBiblios()[i].getTitulo();
               matriz[i][2]= Ci.getListaBiblios()[i].getA単o();
               matriz[i][3]= Ci.getListaBiblios()[i].getPalabrasClave();
               matriz[i][4]= Ci.getListaBiblios()[i].getDescripcion();
               matriz[i][5]= Ci.getListaBiblios()[i].getTemas();
               matriz[i][6]= Ci.getListaBiblios()[i].getEdicion();
               matriz[i][7]= Ci.getListaBiblios()[i].getArea();
               matriz[i][8]= Ci.getListaBiblios()[i].getCopias();
               matriz[i][9]= Ci.getListaBiblios()[i].getCategoria();
               matriz[i][10]= Ci.getListaBiblios()[i].getDisponibles();
               matriz[i][11]= Ci.getListaBiblios()[i].getISBN();
               matriz[i][12]= Ci.getListaBiblios()[i].getTipo();
               
               String[] encabezado = {"Autor", "Titulo", "A単o", "Palabras Clave", "Descripcion", "Temas", "Edicion", "Area", "Copias", "Categoria", "Disponibles", "ISBN", "Tipo"};
        TablaBiblios.setModel(new DefaultTableModel(
           matriz,
           encabezado
       ));
               
            
            
            }
            
            
        }
        

        
    }//GEN-LAST:event_FiltroActionPerformed

    private void Txt_FiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_FiltroKeyReleased
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_Txt_FiltroKeyReleased

    private void TablaBibliosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaBibliosMouseClicked
        // TODO add your handling code here:
        
        int fila = this.TablaBiblios.getSelectedRow();
        
        if (hayespacio1(getListaVirtual())){
            ListaVirtual= redimensionarArre(getListaVirtual());
        
        }
        
        
        for (int i = 0; i < getListaVirtual().length; i++) {
            
            if(getListaVirtual()[i] != null){ 
            
            if(getListaVirtual()[i].getTitulo() == Ci.getListaBiblios()[fila].getTitulo()){
                
                JOptionPane.showMessageDialog(null, "El Libro ya fue Agregado");
                
              break;     
                         
                 
            
            }
            }
            else {
                
                
                  ListaVirtual = redimensionarArre(getListaVirtual());
                
                
                    ListaVirtual[i] = new DatosVirtuales(Txt_Usuario.getText(), Ci.getListaBiblios()[fila].getAutor(), Ci.getListaBiblios()[fila].getTitulo(), Ci.getListaBiblios()[fila].getA単o(), Ci.getListaBiblios()[fila].getPalabrasClave(), Ci.getListaBiblios()[fila].getDescripcion(), Ci.getListaBiblios()[fila].getTemas(), Ci.getListaBiblios()[fila].getEdicion(), Ci.getListaBiblios()[fila].getArea(), Ci.getListaBiblios()[fila].getCopias(), Ci.getListaBiblios()[fila].getCategoria(), Ci.getListaBiblios()[fila].getDisponibles(), Ci.getListaBiblios()[fila].getISBN(), Ci.getListaBiblios()[fila].getTipo());
                
                  break;  
                
            
            }
            
           
        }
        
        
        
        
    }//GEN-LAST:event_TablaBibliosMouseClicked

    private void VerBiblioVirtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerBiblioVirtualActionPerformed
        // TODO add your handling code here:
        LibrosVirtuales newframe = new LibrosVirtuales();

        newframe.setVisible(true);
        String User = Txt_Usuario.getText(); 
        LibrosVirtuales.Txt__Usuario.setText(User); 

        this.dispose();
    }//GEN-LAST:event_VerBiblioVirtualActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        // TODO add your handling code here:
         PantallaUsuarios newframe = new PantallaUsuarios();

        newframe.setVisible(true);
        
        String User = Txt_Usuario.getText(); 
        PantallaUsuarios.TxtUsuario.setText(User);
        

        this.dispose();
    }//GEN-LAST:event_RegresarActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BiblioVirtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BiblioVirtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BiblioVirtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BiblioVirtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BiblioVirtual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Filtro;
    private javax.swing.JButton Regresar;
    private javax.swing.JTable TablaBiblios;
    private javax.swing.JComboBox<String> Txt_Atributo;
    private javax.swing.JTextField Txt_Filtro;
    public static javax.swing.JTextField Txt_Usuario;
    private javax.swing.JButton VerBiblioVirtual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the ListaVirtual
     */
    public static DatosVirtuales[] getListaVirtual() {
        return ListaVirtual;
    }

    private void ListaVirtual(DatosVirtuales[] redimensionarArre) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
